import tensorflow as tf
from tensorflow import keras
import numpy as np
import matplotlib.pyplot as plt

# Load the MNIST dataset
mnist_data = keras.datasets.mnist.load_data()
(x_train, y_train), (x_test, y_test) = mnist_data

# Display some images
plt.imshow(x_train[0], cmap="gray")
plt.show()
y_train
y_test
x_train = x_train/255
x_test = x_test/255
# Define the neural network
model = keras.Sequential()
model.add(keras.layers.Flatten(input_shape=(28, 28)))
model.add(keras.layers.Dense(128, activation='relu'))
model.add(keras.layers.Dense(38, activation='relu'))
model.add(keras.layers.Dense(10, activation='softmax'))

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

# Train the model
model.fit(x_train, y_train, epochs=10,validation_split=0.2)
y_proba = model.predict(x_test)
y_proba
y_preds = y_proba.argmax(axis=1)
y_preds
y_test
from sklearn.metrics import accuracy_score
accuracy = accuracy_score(y_test,y_preds)
accuracy
